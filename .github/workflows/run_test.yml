name: Gen3 Experiments Runnability Test

on:
  workflow_dispatch:
    inputs:
      depthai_version:
        description: 'Version of DepthAI to install for the test run. If specified the version will override version specified in requirements.txt'
        required: false
      platform:
        description: 'Platform to use for testing. By default both RVC2 and RVC4 are used but you can use only one by passing only `RVC2` or `RVC4`.'
        required: false
        default: ""
      log_level:
        description: 'Log level to use for pytest.'
        type: choice
        options:
          - ERROR
          - INFO
          - DEBUG
        default: INFO
        required: false

jobs:
  test:
    runs-on: ["self-hosted", "testbed-runner"]

    strategy:
      matrix:
        python-version: ["3.8", "3.10", "3.12"]
        platform: ${{ fromJSON('["RVC2", "RVC4"]') if inputs.platform == '' else fromJSON(format('["{0}"]', inputs.platform)) }}

      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update HIL
        run: |
          cd /home/$USER/hil_framework
          git pull https://oauth2:${{ secrets.GITLAB_TOKEN }}@gitlab.luxonis.com/luxonis/hil_lab/hil_framework.git
          git fetch
          git checkout main

      - name: Add HIL Tools to Path
        run: |
          echo "/home/$USER/hil_framework/lib_testbed/tools" >> $GITHUB_PATH
          echo "PYTHONPATH="$PYTHONPATH:/home/$USER/hil_framework"" >> $GITHUB_ENV
          echo "HIL_FRAMEWORK_PATH="/home/$USER/hil_framework"" >> $GITHUB_ENV

      - name: Set model variable
        run: |
          if [ "${{ matrix.platform }}" = "RVC2" ]; then
            echo "MODEL=oak_d_s2" >> $GITHUB_ENV
          elif [ "${{ matrix.platform }}" = "RVC4" ]; then
            echo "MODEL=oak4_pro" >> $GITHUB_ENV
          fi
          
      - name: Run Test
        run: |
          export RESERVATION_NAME="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#${{ matrix.python-version}}-${{ matrix.platform }}"
          export INFLUXDB_TOKEN=${{ secrets.INFLUXDB_TOKEN }}
          
          ENV_VARS="\
            --env PLATFORM=${{ matrix.platform }} \
            --env DAI_VERSION=${{ github.event.inputs.depthai_version }} \
            --env PYTHON_VERSION_ENV=${{ matrix.python-version }} \
            --env LOG_LEVEL=${{ github.event.inputs.log_level }}"

          hil --models $MODEL --reservation-name $RESERVATION_NAME --wait --sync-workspace \
              --dockerfile ./tests/Dockerfile \
              --docker-build-args "--build-arg PYTHON_VERSION=${{ matrix.python-version }}" \
              --docker-run-args "$ENV_VARS"
